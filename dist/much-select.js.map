{"version":3,"sources":["diacritics.js","ascii-fold.js","much-select.js"],"names":["diacritics","Map","set","asciiFold","buildAsciiFoldLookup","_diacritics","i","n","chunk","foreignLetters","lookup","k","letters","substring","length","charAt","buildAsciiFold","regexp","RegExp","str","replace","foreignletter","toLowerCase","MuchSelect","buildOptionsFromSelectElement","selectElement","options","querySelectorAll","forEach","optionElement","optionIndex","value","option","hasAttribute","getAttribute","innerText","label","labelClean","index","optionSelectedValue","selected","parentElement","tagName","group","dataset","description","descriptionClean","disabled","push","notNullOrUndefined","thing","stringToOptionObject","numberToOptionObject","num","cleanUpOption","optionMap","TypeError","Math","floor","has","get","cleanUpOptions","map","makeDebouncedFunc","func","timeout","timer","args","clearTimeout","setTimeout","apply","HTMLElement","_selected","_placeholder","_disabled","_loading","_maxDropdownItems","_allowCustomOptions","_app","_onSlotChange","bind","_inputKeypressDebounceHandler","searchString","dispatchEvent","CustomEvent","bubbles","detail","name","oldValue","newValue","updateDimensions","placeholder","maxDropdownItems","allowCustomOptions","loading","flags","buildFlags","parentDiv","attachShadow","mode","html","templateTag","content","cloneNode","append","elmDiv","querySelector","console","log","Elm","Main","init","node","ports","errorMessage","subscribe","errorHandler","valueChanged","valueChangedHandler","addItem","valueLabelPair","inputKeyUp","valueCleared","customOptionSelected","blurInput","inputFilterElement","shadowRoot","getElementById","blur","focusInput","window","requestAnimationFrame","focus","deselectItem","deselectedValue","formattedValue","slot","addEventListener","error","optionsJson","optionsChangedReceiver","send","dropdownElement","valueCasingElement","width","offsetWidth","height","offsetHeight","valueCasingDimensionsChangedReceiver","trim","size","allowMultiSelect","JSON","stringify","valuesTuple","valueTuple","join","valuesObj","values","valueObj","addOptions","addOptionsReceiver","removeOptions","removeOptionsReceiver","selectOptionReceiver","deselectOptionReceiver","setAttribute","split","valueChangedReceiver","placeholderChangedReceiver","removeAttribute","disableChangedReceiver","parseInt","maxDropdownItemsChangedReceiver","loadingChangedReceiver","allowCustomOptionsReceiver","document","createElement","innerHTML","styleTag"],"mappings":"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","file":"much-select.js","sourceRoot":"../src","sourcesContent":["const diacritics = new Map();\n\ndiacritics.set(\"a\", \"[aḀḁĂăÂâǍǎȺⱥȦȧẠạÄäÀàÁáĀāÃãÅåąĄÃąĄ]\");\ndiacritics.set(\"b\", \"[b␢βΒB฿𐌁ᛒ]\");\ndiacritics.set(\"c\", \"[cĆćĈĉČčĊċC̄c̄ÇçḈḉȻȼƇƈɕᴄＣｃ]\");\ndiacritics.set(\"d\", \"[dĎďḊḋḐḑḌḍḒḓḎḏĐđD̦d̦ƉɖƊɗƋƌᵭᶁᶑȡᴅＤｄð]\");\ndiacritics.set(\n  \"e\",\n  \"[eÉéÈèÊêḘḙĚěĔĕẼẽḚḛẺẻĖėËëĒēȨȩĘęᶒɆɇȄȅẾếỀềỄễỂểḜḝḖḗḔḕȆȇẸẹỆệⱸᴇＥｅɘǝƏƐε]\"\n);\ndiacritics.set(\"f\", \"[fƑƒḞḟ]\");\ndiacritics.set(\"g\", \"[gɢ₲ǤǥĜĝĞğĢģƓɠĠġ]\");\ndiacritics.set(\"h\", \"[hĤĥĦħḨḩẖẖḤḥḢḣɦʰǶƕ]\");\ndiacritics.set(\"i\", \"[iÍíÌìĬĭÎîǏǐÏïḮḯĨĩĮįĪīỈỉȈȉȊȋỊịḬḭƗɨɨ̆ᵻᶖİiIıɪＩｉ]\");\ndiacritics.set(\"j\", \"[jȷĴĵɈɉʝɟʲ]\");\ndiacritics.set(\"k\", \"[kƘƙꝀꝁḰḱǨǩḲḳḴḵκϰ₭]\");\ndiacritics.set(\"l\", \"[lŁłĽľĻļĹĺḶḷḸḹḼḽḺḻĿŀȽƚⱠⱡⱢɫɬᶅɭȴʟＬｌ]\");\ndiacritics.set(\"n\", \"[nŃńǸǹŇňÑñṄṅŅņṆṇṊṋṈṉN̈n̈ƝɲȠƞᵰᶇɳȵɴＮｎŊŋ]\");\ndiacritics.set(\"o\", \"[oØøÖöÓóÒòÔôǑǒŐőŎŏȮȯỌọƟɵƠơỎỏŌōÕõǪǫȌȍՕօ]\");\ndiacritics.set(\"p\", \"[pṔṕṖṗⱣᵽƤƥᵱ]\");\ndiacritics.set(\"q\", \"[qꝖꝗʠɊɋꝘꝙq̃]\");\ndiacritics.set(\"r\", \"[rŔŕɌɍŘřŖŗṘṙȐȑȒȓṚṛⱤɽ]\");\ndiacritics.set(\"s\", \"[sŚśṠṡṢṣꞨꞩŜŝŠšŞşȘșS̈s̈]\");\ndiacritics.set(\"t\", \"[tŤťṪṫŢţṬṭƮʈȚțṰṱṮṯƬƭ]\");\ndiacritics.set(\"u\", \"[uŬŭɄʉỤụÜüÚúÙùÛûǓǔŰűŬŭƯưỦủŪūŨũŲųȔȕ∪]\");\ndiacritics.set(\"v\", \"[vṼṽṾṿƲʋꝞꝟⱱʋ]\");\ndiacritics.set(\"w\", \"[wẂẃẀẁŴŵẄẅẆẇẈẉ]\");\ndiacritics.set(\"x\", \"[xẌẍẊẋχ]\");\ndiacritics.set(\"y\", \"[yÝýỲỳŶŷŸÿỸỹẎẏỴỵɎɏƳƴ]\");\ndiacritics.set(\"z\", \"[zŹźẐẑŽžŻżẒẓẔẕƵƶ]\");\n\nexport default diacritics;\n","import diacritics from \"./diacritics.js\";\n\nconst buildAsciiFoldLookup = (_diacritics) => {\n  let i;\n  let n;\n  let chunk;\n\n  let foreignLetters = \"\";\n  const lookup = {};\n  for (const [k, letters] of _diacritics) {\n    chunk = letters.substring(2, letters.length - 1);\n    foreignLetters += chunk;\n    for (i = 0, n = chunk.length; i < n; i += 1) {\n      lookup[chunk.charAt(i)] = k;\n    }\n  }\n\n  return [foreignLetters, lookup];\n};\n\nconst buildAsciiFold = (_diacritics) => {\n  const [foreignLetters, lookup] = buildAsciiFoldLookup(_diacritics);\n\n  const regexp = new RegExp(`[${foreignLetters}]`, \"g\");\n\n  return (str) => {\n    if (!str) {\n      return \"\";\n    }\n    return str\n      .replace(regexp, (foreignletter) => {\n        return lookup[foreignletter];\n      })\n      .toLowerCase();\n  };\n};\n\nconst asciiFold = buildAsciiFold(diacritics);\n\nexport default asciiFold;\n","// noinspection ES6CheckImport\nimport { Elm } from \"./Main.elm\";\n\nimport asciiFold from \"./ascii-fold.js\";\n\nconst buildOptionsFromSelectElement = (selectElement) => {\n  const options = [];\n  const optionElements = selectElement.querySelectorAll(\"option\");\n  optionElements.forEach((optionElement, optionIndex) => {\n    let value;\n    if (optionElement.hasAttribute(\"value\")) {\n      value = optionElement.getAttribute(\"value\");\n    } else {\n      value = optionElement.innerText;\n    }\n    const option = { value };\n    option.label = optionElement.innerText;\n    option.labelClean = asciiFold(optionElement.innerText);\n    option.index = optionIndex;\n    if (optionElement.hasAttribute(\"selected\")) {\n      const optionSelectedValue = optionElement.getAttribute(\"selected\");\n      option.selected = optionSelectedValue !== \"false\";\n    }\n    if (optionElement.parentElement.tagName === \"OPTGROUP\") {\n      option.group = optionElement.parentElement.getAttribute(\"label\");\n    }\n    if (optionElement.dataset.description) {\n      option.description = optionElement.dataset.description;\n      option.descriptionClean = asciiFold(option.description);\n    }\n    option.disabled = optionElement.hasAttribute(\"disabled\");\n    options.push(option);\n  });\n  return options;\n};\n\nconst notNullOrUndefined = (thing) => thing !== null && thing !== undefined;\n\nconst stringToOptionObject = (str) => ({\n  value: str,\n  label: str,\n  labelClean: asciiFold(str),\n});\n\nconst numberToOptionObject = (num) => ({\n  value: `${num}`,\n  label: `${num}`,\n  labelClean: `${num}`,\n});\n\nconst cleanUpOption = (option) => {\n  if (typeof option === \"string\") {\n    return stringToOptionObject(option);\n  }\n  if (typeof option === \"number\") {\n    return numberToOptionObject(option);\n  }\n  if (typeof option === \"object\") {\n    const optionMap = new Map();\n    if (notNullOrUndefined(option.value)) {\n      optionMap.set(\"value\", `${option.value}`);\n    }\n\n    if (notNullOrUndefined(option.label)) {\n      optionMap.set(\"label\", `${option.label}`);\n    }\n\n    if (notNullOrUndefined(option.description)) {\n      optionMap.set(\"description\", option.description);\n    }\n\n    if (notNullOrUndefined(option.disabled)) {\n      optionMap.set(\"disabled\", !!option.disabled);\n    }\n\n    if (notNullOrUndefined(option.index)) {\n      if (typeof option.index === \"number\") {\n        optionMap.set(\"index\", Math.floor(option.index));\n      } else {\n        throw new TypeError(\"option index in not a valid value\");\n      }\n    }\n\n    if (optionMap.has(\"value\") && !optionMap.has(\"label\")) {\n      return {\n        label: optionMap.get(\"value\"),\n        labelClean: asciiFold(optionMap.get(\"value\")),\n        value: optionMap.get(\"value\"),\n        description: optionMap.get(\"description\"),\n        descriptionClean: asciiFold(optionMap.get(\"description\")),\n        disabled: optionMap.get(\"disabled\"),\n        index: optionMap.get(\"index\"),\n      };\n    }\n    if (optionMap.has(\"label\") && !optionMap.has(\"value\")) {\n      return {\n        label: optionMap.get(\"label\"),\n        labelClean: asciiFold(optionMap.get(\"label\")),\n        value: optionMap.get(\"label\"),\n        description: optionMap.get(\"description\"),\n        descriptionClean: asciiFold(optionMap.get(\"description\")),\n        disabled: optionMap.get(\"disabled\"),\n        index: optionMap.get(\"index\"),\n      };\n    }\n    return {\n      label: optionMap.get(\"label\"),\n      labelClean: asciiFold(optionMap.get(\"label\")),\n      value: optionMap.get(\"value\"),\n      description: optionMap.get(\"description\"),\n      descriptionClean: asciiFold(optionMap.get(\"description\")),\n      disabled: optionMap.get(\"disabled\"),\n      index: optionMap.get(\"index\"),\n    };\n  }\n\n  throw new TypeError(\"Invalid option\");\n};\n\nconst cleanUpOptions = (options) => options.map(cleanUpOption);\n\nconst makeDebouncedFunc = (func, timeout = 500) => {\n  let timer;\n  return (...args) => {\n    clearTimeout(timer);\n    timer = setTimeout(() => {\n      func.apply(this, args);\n    }, timeout);\n  };\n};\n\n// adapted from https://github.com/thread/elm-web-components\n\nclass MuchSelect extends HTMLElement {\n  constructor() {\n    super();\n\n    /**\n     * @type {string|null}\n     * @private\n     */\n    this._selected = null;\n\n    /**\n     * @type {string|null}\n     * @private\n     */\n    this._placeholder = null;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this._disabled = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this._loading = false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this._maxDropdownItems = 10000;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this._allowCustomOptions = false;\n\n    /**\n     * @type {null|object}\n     * @private\n     */\n    this._app = null;\n\n    this._onSlotChange = this._onSlotChange.bind(this);\n\n    this._inputKeypressDebounceHandler = makeDebouncedFunc((searchString) => {\n      this.dispatchEvent(\n        new CustomEvent(\"inputKeyUpDebounced\", {\n          bubbles: true,\n          detail: { searchString },\n        })\n      );\n    });\n  }\n\n  static get observedAttributes() {\n    return [\n      \"selected\",\n      \"disabled\",\n      \"placeholder\",\n      \"loading\",\n      \"max-dropdown-items\",\n      \"allow-custom-options\",\n    ];\n  }\n\n  // noinspection JSUnusedGlobalSymbols\n  attributeChangedCallback(name, oldValue, newValue) {\n    if (name === \"selected\") {\n      if (oldValue !== newValue) {\n        this.updateDimensions();\n        this.selected = newValue;\n      }\n    } else if (name === \"placeholder\") {\n      if (oldValue !== newValue) {\n        this.updateDimensions();\n        this.placeholder = newValue;\n      }\n    } else if (name === \"disabled\") {\n      if (oldValue !== newValue) {\n        this.disabled = newValue;\n      }\n    } else if (name === \"max-dropdown-items\") {\n      if (oldValue !== newValue) {\n        this.maxDropdownItems = newValue;\n      }\n    } else if (name === \"allow-custom-options\") {\n      if (oldValue !== newValue) {\n        this.allowCustomOptions = newValue;\n      }\n    } else if (name === \"loading\") {\n      if (oldValue !== newValue) {\n        this.loading = newValue;\n      }\n    }\n  }\n\n  // noinspection JSUnusedGlobalSymbols\n  connectedCallback() {\n    // eslint-disable-next-line no-useless-catch\n    try {\n      const flags = this.buildFlags();\n\n      // User shadow DOM.\n      const parentDiv = this.attachShadow({ mode: \"open\" });\n\n      const html = this.templateTag.content.cloneNode(true);\n      parentDiv.append(html);\n\n      const elmDiv = parentDiv.querySelector(\"#mount-node\");\n\n      console.log(\"elmDiv\", elmDiv);\n\n      // noinspection JSUnresolvedVariable\n      this._app = Elm.Main.init({\n        flags,\n        node: elmDiv,\n      });\n\n      // noinspection JSUnresolvedVariable,JSIgnoredPromiseFromCall\n      this._app.ports.errorMessage.subscribe(this.errorHandler.bind(this));\n\n      // noinspection JSUnresolvedVariable,JSIgnoredPromiseFromCall\n      this._app.ports.valueChanged.subscribe(\n        this.valueChangedHandler.bind(this)\n      );\n\n      // noinspection JSUnresolvedVariable\n      this._app.ports.addItem.subscribe((valueLabelPair) => {\n        this.dispatchEvent(\n          new CustomEvent(\"addItem\", {\n            bubbles: true,\n            detail: {\n              value: valueLabelPair[0],\n              label: valueLabelPair[1],\n            },\n          })\n        );\n      });\n\n      // noinspection JSUnresolvedVariable\n      this._app.ports.inputKeyUp.subscribe((searchString) => {\n        this.dispatchEvent(\n          new CustomEvent(\"inputKeyUp\", {\n            bubbles: true,\n            detail: { searchString },\n          })\n        );\n\n        this._inputKeypressDebounceHandler(searchString);\n      });\n\n      // noinspection JSUnresolvedVariable\n      this._app.ports.valueCleared.subscribe(() => {\n        this.dispatchEvent(\n          new CustomEvent(\"valueCleared\", {\n            bubbles: true,\n          })\n        );\n      });\n\n      // noinspection JSUnresolvedVariable\n      this._app.ports.customOptionSelected.subscribe(\n        this.customOptionSelected.bind(this)\n      );\n\n      // noinspection JSUnresolvedVariable,JSIgnoredPromiseFromCall\n      this._app.ports.blurInput.subscribe(() => {\n        const inputFilterElement = this.shadowRoot.getElementById(\n          \"input-filter\"\n        );\n        if (inputFilterElement) {\n          inputFilterElement.blur();\n        }\n      });\n\n      // noinspection JSUnresolvedVariable,JSIgnoredPromiseFromCall\n      this._app.ports.focusInput.subscribe(() => {\n        window.requestAnimationFrame(() => {\n          const inputFilterElement = this.shadowRoot.getElementById(\n            \"input-filter\"\n          );\n          if (inputFilterElement) {\n            this.shadowRoot.getElementById(\"input-filter\").focus();\n          }\n        });\n      });\n\n      // noinspection JSUnresolvedVariable,JSIgnoredPromiseFromCall\n      this._app.ports.deselectItem.subscribe((deselectedValue) => {\n        const formattedValue = {\n          label: deselectedValue[0][1],\n          value: deselectedValue[0][0],\n        };\n        this.dispatchEvent(\n          new CustomEvent(\"deselectItem\", {\n            bubbles: true,\n            detail: formattedValue,\n          })\n        );\n      });\n\n      const slot = this.shadowRoot.querySelector(\"slot[name=select-input]\");\n      if (slot) {\n        slot.addEventListener(\"slotchange\", this._onSlotChange);\n      }\n    } catch (error) {\n      // TODO Do something interesting here\n      throw error;\n    }\n  }\n\n  _onSlotChange() {\n    const selectElement = this.querySelector(\"select\");\n    if (selectElement) {\n      const optionsJson = buildOptionsFromSelectElement(selectElement);\n\n      // noinspection JSUnresolvedVariable\n      this._app.ports.optionsChangedReceiver.send(optionsJson);\n      this.updateDimensions();\n    }\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  errorHandler(error) {\n    // eslint-disable-next-line no-console\n    console.error(error);\n  }\n\n  /**\n   * This method updates the width this widget when it's not selected, so when\n   *  it is selected it matches the input element.\n   * This needs to be called very time the options or the values change (or\n   *  anything else that might change the height or width of the much-select.\n   * It waits for 1 frame before doing calculating what the height and width\n   *  should be.\n   */\n  updateDimensions() {\n    window.requestAnimationFrame(() => {\n      const dropdownElement = this.shadowRoot.getElementById(\"dropdown\");\n      const valueCasingElement = this.shadowRoot.getElementById(\"value-casing\");\n      if (dropdownElement && valueCasingElement) {\n        let width = dropdownElement.offsetWidth;\n        let height = valueCasingElement.offsetHeight;\n\n        // Clamp the width between some min and max.\n        // TODO this min and max should probably not be hard coded here.\n        if (width < 100) {\n          width = 100;\n        } else if (width > 500) {\n          width = 500;\n        }\n\n        // Clamp the width between some min and max.\n        // TODO this min and max should probably not be hard coded here.\n        if (height < 20) {\n          height = 20;\n        }\n\n        // noinspection JSUnresolvedVariable\n        this._app.ports.valueCasingDimensionsChangedReceiver.send({\n          width,\n          height,\n        });\n      }\n    });\n  }\n\n  buildFlags() {\n    const flags = {};\n    if (this.selected) {\n      flags.value = this.selected;\n    } else {\n      flags.value = \"\";\n    }\n\n    if (this.hasAttribute(\"placeholder\")) {\n      flags.placeholder = this.getAttribute(\"placeholder\").trim();\n    } else {\n      flags.placeholder = \"\";\n    }\n\n    if (this.hasAttribute(\"size\")) {\n      flags.size = this.getAttribute(\"size\").trim();\n    } else {\n      flags.size = \"\";\n    }\n\n    if (this.hasAttribute(\"multi-select\")) {\n      flags.allowMultiSelect = this.getAttribute(\"multi-select\") !== \"false\";\n    } else {\n      flags.allowMultiSelect = false;\n    }\n\n    flags.disabled = this.disabled;\n    flags.loading = this.loading;\n    flags.maxDropdownItems = this.maxDropdownItems;\n    flags.allowCustomOptions = this.allowCustomOptions;\n\n    const selectElement = this.querySelector(\"select\");\n    if (selectElement) {\n      flags.optionsJson = JSON.stringify(\n        buildOptionsFromSelectElement(selectElement)\n      );\n    } else {\n      flags.optionsJson = JSON.stringify([]);\n    }\n\n    if (this.hasAttribute(\"selected\")) {\n      flags.value = this.getAttribute(\"selected\");\n    }\n\n    return flags;\n  }\n\n  valueChangedHandler(valuesTuple) {\n    // TODO perhaps this delimiter should be configurable\n    this.selected = valuesTuple.map((valueTuple) => valueTuple[0]).join(\",\");\n    this.updateDimensions();\n    if (\n      this.hasAttribute(\"multi-select\") &&\n      this.getAttribute(\"multi-select\") !== \"false\"\n    ) {\n      // If we are in multi select mode put the list of values in the event.\n      const valuesObj = valuesTuple.map((valueTuple) => ({\n        value: valueTuple[0],\n        label: valueTuple[1],\n      }));\n      this.dispatchEvent(\n        new CustomEvent(\"valueChanged\", {\n          bubbles: true,\n          detail: { values: valuesObj },\n        })\n      );\n    } else if (valuesTuple.length === 0) {\n      // If we are in single select mode and the value is empty.\n      this.dispatchEvent(\n        new CustomEvent(\"valueChanged\", {\n          bubbles: true,\n          detail: { value: null },\n        })\n      );\n    } else if (valuesTuple.length === 1) {\n      // If we are in single select mode put the list of values in the event.\n      const valueObj = { value: valuesTuple[0][0], label: valuesTuple[0][1] };\n      this.dispatchEvent(\n        new CustomEvent(\"valueChanged\", {\n          bubbles: true,\n          detail: { value: valueObj },\n        })\n      );\n    } else {\n      // If we are in single select mode and there is more than one value then something is wrong.\n      throw new TypeError(\n        `In single select mode we are expecting a single value, instead we got ${valuesTuple.length}`\n      );\n    }\n  }\n\n  customOptionSelected(values) {\n    if (\n      this.hasAttribute(\"multi-select\") &&\n      this.getAttribute(\"multi-select\") !== \"false\" &&\n      values.length > 0\n    ) {\n      // If we are in multi select mode put the list of values in the event.\n      this.dispatchEvent(\n        new CustomEvent(\"customValueSelected\", {\n          bubbles: true,\n          detail: {\n            values,\n          },\n        })\n      );\n    } else if (values.length === 1) {\n      // If we are in single select mode put the list of values in the event.\n      this.dispatchEvent(\n        new CustomEvent(\"customValueSelected\", {\n          bubbles: true,\n          detail: {\n            value: values[0],\n          },\n        })\n      );\n    } else {\n      // If we are in single select mode and there is not one value then something is wrong.\n      throw new TypeError(\n        `In single select mode we are expecting a single custom option, instead we got ${values.length}`\n      );\n    }\n  }\n\n  get selected() {\n    return this._selected;\n  }\n\n  set selected(value) {\n    this.setAttribute(\"selected\", value);\n\n    if (value) {\n      // TODO perhaps this delimiter should be configurable\n      const values = value.split(\",\");\n\n      // TODO Convert this._app to a function that get a promise that returns _app\n      //  when it is ready.\n      // noinspection JSUnresolvedVariable\n      this._app.ports.valueChangedReceiver.send(values);\n    } else {\n      // TODO Convert this._app to a function that get a promise that returns _app\n      //  when it is ready.\n      // noinspection JSUnresolvedVariable\n      this._app.ports.valueChangedReceiver.send([]);\n    }\n  }\n\n  get placeholder() {\n    return this._placeholder;\n  }\n\n  set placeholder(placeholder) {\n    this.setAttribute(\"placeholder\", placeholder);\n    // TODO Convert this._app to a function that get a promise that returns _app\n    //  when it is ready.\n    // noinspection JSUnresolvedVariable\n    this._app.ports.placeholderChangedReceiver.send(placeholder);\n\n    this._placeholder = placeholder;\n  }\n\n  get disabled() {\n    return this._disabled;\n  }\n\n  set disabled(value) {\n    if (value === \"false\") {\n      this._disabled = false;\n    } else {\n      this._disabled = !!value;\n    }\n\n    if (this._disabled) {\n      this.setAttribute(\"disabled\", \"disabled\");\n    } else {\n      this.removeAttribute(\"disabled\");\n    }\n    // noinspection JSUnresolvedVariable\n    this._app.ports.disableChangedReceiver.send(this._disabled);\n  }\n\n  get maxDropdownItems() {\n    return this._maxDropdownItems;\n  }\n\n  set maxDropdownItems(value) {\n    let newValue;\n    if (typeof value === \"number\") {\n      newValue = Math.floor(value);\n    } else if (typeof value === \"string\") {\n      newValue = Math.floor(parseInt(value, 10));\n    } else {\n      throw new TypeError(\"Max dropdown items must be a number!\");\n    }\n    if (newValue < 3) {\n      this._maxDropdownItems = 3;\n    } else {\n      this._maxDropdownItems = newValue;\n      this.setAttribute(\"max-dropdown-items\", newValue);\n    }\n    // noinspection JSUnresolvedVariable\n    this._app.ports.maxDropdownItemsChangedReceiver.send(\n      this._maxDropdownItems\n    );\n  }\n\n  get loading() {\n    return this._loading;\n  }\n\n  set loading(value) {\n    if (value === \"false\") {\n      this._loading = false;\n    } else {\n      this._loading = !!value;\n    }\n    if (this._loading) {\n      this.setAttribute(\"loading\", \"loading\");\n    } else {\n      this.removeAttribute(\"loading\");\n    }\n    // noinspection JSUnresolvedVariable\n    this._app.ports.loadingChangedReceiver.send(this._loading);\n  }\n\n  get allowCustomOptions() {\n    return this._allowCustomOptions;\n  }\n\n  set allowCustomOptions(value) {\n    if (value === \"false\") {\n      this._allowCustomOptions = false;\n    } else {\n      this._allowCustomOptions = !!value;\n    }\n    if (this._allowCustomOptions) {\n      this.setAttribute(\"allow-custom-options\", \"true\");\n    } else {\n      this.removeAttribute(\"allow-custom-options\");\n    }\n    // noinspection JSUnresolvedVariable\n    this._app.ports.allowCustomOptionsReceiver.send(this._allowCustomOptions);\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  get styleTag() {\n    return `<style>\n      :host {\n        /*\n        This web components should take up some space on the page.\n\n        TODO: Do we really have to set this by hand? Can't we do something so that\n        this gets calculated automatically? If it must be set by hand we should probably\n        do something a bit more clever here to not hard code these values so much.\n        */\n\n        min-height: 40px;\n        min-width: 200px;\n      }\n\n      /*\n      If we are using a select element in the select-input slot to manage the\n      the options do not show it.\n      */\n      slot[name='select-input'] {\n        display: none;\n      }\n\n      #wrapper {\n        margin-top: auto;\n        margin-bottom: auto;\n        position: relative;\n        max-width: 400px;\n        min-width: 200px;\n      }\n\n      /*\n        This value casing (and what's inside of it) is supposed to be the\n        \"main event\".\n      */\n      #value-casing {\n        min-height: 34px;\n        cursor: pointer;\n        overflow: hidden;\n        -moz-appearance: textfield;\n        -webkit-appearance: textfield;\n        background-color: white;\n        background-color: -moz-field;\n        border: 1px solid darkgray;\n        box-shadow: 1px 1px 1px 0 lightgray inset;\n        font: -moz-field;\n        font: -webkit-small-control;\n        padding: 4px 3px 2px 3px;\n        display: flex;\n        flex-flow: row nowrap;\n      }\n\n      #value-casing:hover, #value-casing:focus {\n        /*\n        TODO: I'm not sure this is the best place or the best way to indicate this\n        \"input\" is focused.\n        */\n        outline: none;\n        border-color: blue;\n      }\n\n      #value-casing.multi {\n        flex-flow: row wrap;\n      }\n\n      #value-casing.disabled {\n        border: 1px solid lightgray;\n        cursor: pointer;\n      }\n\n      #value-casing .placeholder {\n        color: silver;\n        font-size: 25px;\n        vertical-align: middle;\n        white-space: nowrap;\n        text-overflow: ellipsis;\n        overflow: hidden;\n        flex-basis: 1;\n      }\n\n      #value-casing #input-filter {\n        /*\n        TODO, seems like the height and font-size should not be hardcoded.\n        */\n        height: 36px;\n        font-size: 25px;\n        /* The min-width let's the input shrink down as far as it needs to.\n        The with width lets it grow as much as it can.\n        */\n        min-width: 10px;\n        width: 100%;\n        /* Let's give the input a bit more room than the selected values.\n        */\n        flex-grow: 3;\n        flex-shrink: 0;\n        flex-basis: 10%;\n        /* We don't want a border because the value-casing will supply the border for\n          this input.\n        */\n        border: none;\n      }\n\n      #input-filter:hover, #input-filter:focus {\n        /*\n        We do not want an outline on the input (filter) because we want everything\n        inside of the #value-casing to (kinda) act like a text input.\n        */\n        outline: none;\n      }\n\n      #value-casing.single {\n        background-image: linear-gradient(to bottom, #fefefe, #f2f2f2);\n        background-repeat: repeat-x;\n      }\n\n      #value-casing.single.disabled {\n        background-image: none;\n      }\n\n      #value-casing.single .value {\n        padding: 3px;\n        font-size: 20px;\n        margin: 2px 2px;\n        min-width: 10px;\n      }\n\n      #value-casing.multi .value {\n        padding: 3px;\n        font-size: 20px;\n        color: white;\n        background-image: linear-gradient(to bottom, #4f6a8f, #88a2bc);\n        background-repeat: repeat-x;\n        margin: 2px 2px;\n        border-radius: 5px;\n        border: 3px solid;\n        border-color: #d99477;\n        min-width: 10px;\n\n        flex-grow: 0;\n        flex-shrink: 1;\n        flex-basis: auto;\n      }\n\n      #value-casing.multi .value.selected-value {\n        background-image: linear-gradient(to bottom, #d99477, #efb680);\n        background-repeat: repeat-x;\n      }\n\n      #value-casing.single {\n        width: 100%;\n      }\n\n      #dropdown-indicator {\n        position: absolute;\n        right: 3px;\n        top: 15px;\n        cursor: pointer;\n        display: block;\n        transition: transform 0.25s;\n      }\n\n      #dropdown-indicator.down {\n        transform: rotate(180deg);\n      }\n\n      #dropdown-indicator.up {\n        transform: rotate(none);\n      }\n\n      slot[name='loading-indicator'] {\n        display: block;\n        position: absolute;\n        right: 5px;\n        top: 10px;\n      }\n\n      #clear-button-wrapper {\n        display: block;\n        position: absolute;\n        right: 3px;\n        top: 7px;\n        cursor: pointer;\n      }\n\n      #dropdown {\n        background-color: #EEEEEE;\n        visibility: hidden;\n        padding: 5px;\n        position: absolute;\n        left: 0px;\n        font-size: 20px;\n        min-width: 200px;\n        display: inline-block;\n        z-index: 10;\n        max-height: 300px;\n        overflow-y: auto;\n      }\n      #dropdown.showing {\n        visibility: visible;\n      }\n      #dropdown.hiding {\n        visibility: hidden;\n      }\n      .optgroup {\n        background-color: gray;\n        font-size: 0.85rem;\n        font-weight: 300;\n        padding: 5px;\n      }\n      .option {\n        background-color: silver;\n        padding: 5px;\n        cursor: pointer;\n      }\n\n      .option.selected {\n        background-color: darkslategrey;\n        color: ghostwhite;\n        cursor: pointer;\n      }\n\n      .option.highlighted {\n        background-color: indigo;\n        color: ghostwhite;\n      }\n\n      .option.disabled {\n        display: none;\n      }\n\n      .description {\n        font-size: 0.85rem;\n        padding: 3px;\n      }\n\n      .highlight { color: blue }\n\n      /* This loading indicator was copied (almost exactly)\n        from this article.\n        https://dev.to/devmount/learn-css-animation-by-creating-pure-css-loaders-3lm6\n\n        It was chosen because it was so simple and short.\n      */\n      .default-loading-indicator {\n        height: 18px;\n        width: 18px;\n        border: 5px solid rgba(150, 150, 150, 0.2);\n        border-radius: 50%;\n        border-top-color: rgb(150, 150, 150);\n        animation: rotate 1s 0s infinite ease-in-out alternate;\n      }\n      @keyframes rotate {\n        0%   { transform: rotate(0);      }\n        100% { transform: rotate(360deg); }\n      }\n    </style>`;\n  }\n\n  get templateTag() {\n    const templateTag = document.createElement(\"template\");\n    templateTag.innerHTML = `\n      <div>\n        ${this.styleTag}\n        <slot name=\"select-input\"></slot>\n        <div id=\"mount-node\"></div>\n      </div>\n    `;\n    return templateTag;\n  }\n\n  updateOptions(options) {\n    // noinspection JSUnresolvedVariable\n    this._app.ports.optionsChangedReceiver.send(cleanUpOptions(options));\n    this.updateDimensions();\n  }\n\n  addOption(option) {\n    this.addOptions([option]);\n  }\n\n  addOptions(options) {\n    // noinspection JSUnresolvedVariable\n    this._app.ports.addOptionsReceiver.send(cleanUpOptions(options));\n    this.updateDimensions();\n  }\n\n  removeOption(option) {\n    this.removeOptions([option]);\n  }\n\n  removeOptions(options) {\n    // noinspection JSUnresolvedVariable\n    this._app.ports.removeOptionsReceiver.send(cleanUpOptions(options));\n    this.updateDimensions();\n  }\n\n  selectOption(option) {\n    // noinspection JSUnresolvedVariable\n    this._app.ports.selectOptionReceiver.send(cleanUpOption(option));\n  }\n\n  deselectOption(option) {\n    // noinspection JSUnresolvedVariable\n    this._app.ports.deselectOptionReceiver.send(cleanUpOption(option));\n  }\n}\n\n// noinspection JSUnusedGlobalSymbols\nexport default MuchSelect;\n"]}